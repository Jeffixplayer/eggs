rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Allow read/write access to authenticated users for their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      // Allow admins to read all user documents for role management
      allow read: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Work Orders collection rules
    match /workOrders/{workOrderId} {
      // Workers can create work orders and read their own
      allow create: if request.auth != null;
      allow read, update: if request.auth != null && 
        (resource.data.createdBy == request.auth.uid || 
         (exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'));
      
      // Only admins can delete work orders
      allow delete: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        
      // Admins can read and update all work orders for status management
      allow read, update: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Deny all other reads/writes
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

// Firebase Storage Rules (for storage.rules file)
/*
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Work order images - authenticated users only
    match /work-orders/{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}
*/